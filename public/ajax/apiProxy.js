// This file is auto-generated by the server startup script.
// Do not edit this file directly in development mode.

import { api } from './apiExecutor.js';

/**
 * @private
 * 處理 API 呼叫的通用邏輯，包括錯誤處理。
 */

async function handleApiCall(apiCallFn, endpoint, dataOrParams) {
    try {
        const response = await apiCallFn(endpoint, dataOrParams);
        console.log(`${endpoint} 成功:`, response);
        return response;
    } catch (error) {
        console.error(`${endpoint} 失敗:`, error);
        throw error; // 將錯誤重新拋出，讓上層呼叫者處理顯示邏輯
    }
}
export const apiProxy = {
    /**
     * 呼叫 POST /api/login API。
     * @param {Object} credentials - 要傳遞的請求主體數據 (JSON 物件)。
     * @returns {Promise<Object|string>} 回應數據。
     */
    login: async (credentials) => {
        return handleApiCall(api.post, 'login', { credentials: credentials });
    },

    /**
     * 呼叫 GET /api/echomsg API。
     * @param {string} msg - 要傳遞的查詢訊息。
     * @returns {Promise<Object|string>} 回應數據。
     */
    echomsg: async (msg) => {
        return handleApiCall(api.get, 'echomsg', { msg });
    },

    /**
     * 呼叫 POST /api/reversemmsg API。
     * @param {Object} message - 要傳遞的請求主體數據 (JSON 物件)。
     * @returns {Promise<Object|string>} 回應數據。
     */
    reversemmsg: async (message) => {
        return handleApiCall(api.post, 'reversemmsg', { message: message });
    },

};
